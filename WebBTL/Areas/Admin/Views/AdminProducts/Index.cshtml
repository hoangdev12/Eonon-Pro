@model PagedList.IPagedList<WebBTL.Models.Product>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
    <div class="ml-5">
        <h2>Product</h2>
        <form method="post" class="row">
            <form method="get" class="row">

                <div class="form-group mr-3">
                    @Html.DropDownList("TrangThai", (IEnumerable<SelectListItem>)ViewData["IsTrangThai"], " Trạng thái", new { @class = "form-control", @style = "min-width: 180px; max-width: 30%", id = "TrangThai" })
                </div>
                <div class="form-group mr-3">
                    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" class="form-control" placeholder="Tìm tên sản phẩm" />
                </div>
                <br />
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Lọc</button>
                </div>

            </form>
    </div>
    <div class="d-flex justify-content-end container">
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    </div>
    </form>

    <br />
    <table class="table">
        <tr>
            <th>
                Product ID
            </th>
            <th>
                Product Name
            </th>
            <th>
                Price
            </th>
            <th>
                Discount
            </th>
            <th>
                So luong
            </th>
            <th>
                Active
            </th>

            <th class="text-center">#</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr id="trow_@item.ProductID">
                <td>
                    @Html.DisplayFor(modelItem => item.ProductID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @String.Format("{0:N0} VND", item.Price)
                </td>

                <td>
                    @String.Format("{0:N0} VND", item.Discount)
                </td>
                <td class="text-ce">
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                </td>
                <td>
                    @if (item.UnitsInStock > 0)
                    {
                        <span class="badge badge-success">  Instock</span>
                    }
                    else if (item.UnitsInStock == 0)
                    {
                        <span class="badge badge-danger"> Outstock</span>
                    }
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }, new { @class = "btn btn-outline-primary" })
                    @Html.ActionLink("Details", "Details", new { id = item.ProductID }, new { @class = "btn btn-outline-info" })
                    <a href="#" data-id="@item.ProductID" class="btn btn-outline-warning btnDelete">Delete</a>

                </td>
            </tr>
        }
    </table>

    <div aria-label="Page navigation example">
        <ul class="pagination d-flex justify-content-end " style="margin-top: 20px;">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = 10, CategoryId = Request["CategoryId"], TrangThai = Request["TrangThai"], searchTerm = ViewBag.SearchTerm }),
                new PagedListRenderOptions
                {
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    LinkToPreviousPageFormat = "<button class='btn btn-secondary mr-3'>Previous</button>",
                    LinkToNextPageFormat = "<button class='btn btn-secondary ml-3'>Next</button>",

                })
        </ul>
    </div>

</div>

<style>
    .pagination li {
        margin: 0 10px;
    }
</style>

@*@section scripts{
        <script>
            console.log('Trying to access element:', document.getElementById('trow_' + id));
            $(document).ready(function () {
                $('body').on('click', '.btnDelete', function () {
                    var id = $(this).data('id');

                    var conf = confirm('Bạn có muốn xóa sản phẩm này ko');
                    if (conf === true) {
                        $.ajax({
                            url: '/Admin/AdminProducts/Delete',
                            type: 'POST',
                            data: { ProductID: id },
                            success: function (rs) {
                                if (rs.success) {
                                    $('#trow_' + id).remove();
                                }
                            }
                        })
                    }
                });
            });

        </script>
    }*@

@section scripts {
    <script>
        $(document).ready(function () {

            $('body').on('click', '.btnDelete', function () {

                var id = $(this).data('id');


                var conf = confirm('Bạn có muốn xóa sản phẩm này không?');
                if (conf === true) {

                    $.ajax({
                        url: '/Admin/AdminProducts/Delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {

                                $('#trow_' + id).remove();
                                alert('Xóa sản phẩm thành công');
                            } else {

                                alert('Không thể xóa sản phẩm. Vui lòng thử lại.');
                            }
                        },
                        error: function (xhr, status, error) {

                            console.error('Error occurred:', error);
                            alert('Có lỗi xảy ra: ' + xhr.responseText);
                        }
                    });
                }
            });
        });
    </script>
}
