@model PagedList.IPagedList<WebBTL.Models.Page>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Page";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Index</h2>


    <br />
    <div class="d-flex justify-content-end">


        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    </div>
    <br />
    @if (Model != null && Model.Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model[0].PageID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].PageName)
                </th>
                <th>
                    Trạng thái
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr id="trow_@item.PageID">
                    <td>
                        @Html.DisplayFor(modelItem => item.PageID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PageName)
                    </td>
                    <td>
                        @if (item.Published == true)
                        {

                            <div class="d-flex align-items-center">
                                <div class="badge badge-success badge-dot mr-5"> </div>
                                <div>Public</div>

                            </div>

                        }
                        else
                        {
                            <div class="d-flex align-items-center">
                                <div class="badge badge-success badge-dot mr-5">   </div>
                                <div>Non-Public</div>

                            </div>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.PageID }, new { @class = "btn btn-outline-primary" }) 
                        @Html.ActionLink("Details", "Details", new { id = item.PageID }, new { @class = "btn btn-outline-info" })
                        <a href="#" data-id="@item.PageID" class="btn btn-outline-danger btnDelete">Delete</a>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No data available</p>
    }



    <div aria-label="Page navigation example">
        <ul class="pagination d-flex justify-content-end" style="margin-top: 20px;">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {

                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,

                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,



                    LinkToPreviousPageFormat = "<button class='btn btn-secondary mr-3'>Previous</button>",
                    LinkToNextPageFormat = "<button class='btn btn-secondary ml-3'>Next</button>",



                })
        </ul>
    </div>

</div>

@section scripts {
    <script>
        $(document).ready(function () {

            $('body').on('click', '.btnDelete', function () {

                var id = $(this).data('id');


                var conf = confirm('Bạn có muốn xóa sản phẩm này không?');
                if (conf === true) {

                    $.ajax({
                        url: '/Admin/AdminPages/Delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {

                                $('#trow_' + id).remove();
                                alert('Xóa page thành công');
                            } else {

                                alert('Không thể xóa page. Vui lòng thử lại.');
                            }
                        },
                        error: function (xhr, status, error) {

                            console.error('Error occurred:', error);
                            alert('Có lỗi xảy ra: ' + xhr.responseText);
                        }
                    });
                }
            });
        });
    </script>
}
